# This workflow integrates Brakeman with GitHub's Code Scanning feature
# Brakeman is a static analysis security vulnerability scanner for Ruby on Rails applications

name: Brakeman Scan

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - 'README.md'
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main ]
  schedule:
    # cron format: 'minute hour dayofmonth month dayofweek'
    # this will run at noon UTC each Monday (7am EST / 8am EDT)
    - cron: '0 12 * * 1'

jobs:
  brakeman-scan:
    name: Brakeman Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    # TODO: switch to run action once composite actions support `uses`
    # - uses: ./.github/actions/setup-project
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        # bundler-cache automatically installs gems
        bundler-cache: true
        cache-version: 1

    # Execute Brakeman CLI and generate a SARIF output with the security issues identified during the analysis
    - name: Brakeman Scan
      continue-on-error: true
      run: |
        bundle exec brakeman -f sarif -o output.sarif.json .

    # Upload the SARIF file generated in the previous step
    - name: Upload SARIF
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: output.sarif.json
